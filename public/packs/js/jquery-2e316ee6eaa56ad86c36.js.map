{"version":3,"file":"js/jquery-2e316ee6eaa56ad86c36.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/jquery.jpostal.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/jquery.jpostal.js\");\n","/*jslint browser:true, devel:true*/\r\n/*jslint unparam:true*/\r\n/*global window, $, jQuery*/\r\n\r\n/**\r\n * jquery.jpostal.js ver2.7\r\n * \r\n * Copyright 2014, Aoki Makoto, Ninton G.K. http://www.ninton.co.jp\r\n * \r\n * Released under the MIT license - http://en.wikipedia.org/wiki/MIT_License\r\n * \r\n * Requirements\r\n * jquery.js\r\n */\r\nvar Jpostal = {};\r\n\r\nJpostal.Database = function () {\r\n    \"use strict\";\r\n\r\n    this.address = [];    // database cache\r\n    this.map     = {};\r\n    this.url     = {\r\n        'http'  : '//jpostal-1006.appspot.com/json/',\r\n        'https' : '//jpostal-1006.appspot.com/json/'\r\n    };\r\n};\r\n\r\nJpostal.Database.prototype.find = function (i_postcode) {\r\n    \"use strict\";\r\n\r\n    var address = [];\r\n\r\n    this.address.forEach(function (eachAddress) {\r\n        if (eachAddress[0] === '_' + i_postcode) {\r\n            address = eachAddress;\r\n        }\r\n    });\r\n\r\n    return address;\r\n};\r\n\r\nJpostal.Database.prototype.get = function (i_postcode) {\r\n    \"use strict\";\r\n\r\n    //    --------------------------------------------------\r\n    //    i_postcode    find()    find()    result\r\n    //                1234567    123\r\n    //    --------------------------------------------------\r\n    //    1             -        -        defaults\r\n    //    12            -        -        defaults\r\n    //    123           -        Y        find( '123' )\r\n    //    123           -        N        defaults\r\n    //    1234          -        Y        find( '123' )\r\n    //    1234          -        N        defaults\r\n    //    1234567       Y        -        find( '1234567' )\r\n    //    1234567       N        Y        find( '123' )\r\n    //    1234567       N        N        defaults\r\n    //    --------------------------------------------------\r\n    var defaults = ['', '', '', '', '', '', '', '', ''],\r\n        address,\r\n        head3;\r\n\r\n    switch (i_postcode.length) {\r\n    case 3:\r\n    case 4:\r\n    case 5:\r\n    case 6:\r\n        head3 = i_postcode.substr(0, 3);\r\n        address = this.find(head3);\r\n        address = $.extend(defaults, address);\r\n        break;\r\n\r\n    case 7:\r\n        address = this.find(i_postcode);\r\n        if (address.length === 0) {\r\n            head3 = i_postcode.substr(0, 3);\r\n            address = this.find(head3);\r\n        }\r\n        address = $.extend(defaults, address);\r\n        break;\r\n\r\n    default:\r\n        address = defaults;\r\n        break;\r\n    }\r\n\r\n    return address;\r\n};\r\n\r\nJpostal.Database.prototype.getUrl = function (i_head3) {\r\n    \"use strict\";\r\n\r\n    var url = '';\r\n\r\n    switch (this.getProtocol()) {\r\n    case 'http:':\r\n        url = this.url.http;\r\n        break;\r\n\r\n    case 'https:':\r\n        url = this.url.https;\r\n        break;\r\n    }\r\n    url = url + i_head3 + '.json';\r\n\r\n    try {\r\n        url = url + '?referer=' + encodeURIComponent(window.location.href);\r\n    } catch (e) {}\r\n\r\n    return url;\r\n};\r\n\r\nJpostal.Database.prototype.request = function (i_postcode, i_callback) {\r\n    \"use strict\";\r\n\r\n    var head3,\r\n        url,\r\n        options;\r\n\r\n    head3 = i_postcode.substr(0, 3);\r\n\r\n    if (i_postcode.length <= 2 || this.getStatus(head3) !== 'none' || head3.match(/\\D/)) {\r\n        return false;\r\n    }\r\n    this.setStatus(head3, 'waiting');\r\n\r\n    url = this.getUrl(head3);\r\n\r\n    options = {\r\n        async         : true,\r\n        dataType      : 'jsonp',\r\n        jsonpCallback : 'jQuery_jpostal_callback',\r\n        type          : 'GET',\r\n        url           : url,\r\n        success       : function () {    // function(i_data, i_dataType\r\n            i_callback();\r\n        },\r\n        timeout : 5000    // msec\r\n    };\r\n    this.ajax(options);\r\n    return true;\r\n};\r\n\r\nJpostal.Database.prototype.ajax = function (options) {\r\n    \"use strict\";\r\n\r\n    $.ajax(options);\r\n};\r\n\r\nJpostal.Database.prototype.save = function (i_data) {\r\n    \"use strict\";\r\n\r\n    var that = this;\r\n\r\n    i_data.forEach(function (rcd) {\r\n        var postcode = rcd[0];\r\n\r\n        if (that.map[postcode] === undefined) {\r\n            that.address.push(rcd);\r\n            that.map[postcode] = {state : 'complete', time : 0};\r\n        } else if (that.map[postcode].state === 'waiting') {\r\n            that.address.push(rcd);\r\n            that.map[postcode].state = 'complete';\r\n        }\r\n    });\r\n};\r\n\r\nJpostal.Database.prototype.getStatus = function (i_postcode) {\r\n    \"use strict\";\r\n\r\n    //    --------------------------------------------------\r\n    //    #    ['_001']    ..state        .time        result\r\n    //    --------------------------------------------------\r\n    //    1     =undefined    -            -            none\r\n    //    2    !=undefined    'complete'    -           complete\r\n    //    3    !=undefined    'waiting'    <5sec        waiting\r\n    //    4    !=undefined    'waiting'    >=5sec       none\r\n    //    --------------------------------------------------\r\n    var st = '',\r\n        postcode = '_' + i_postcode,\r\n        t_ms;\r\n\r\n    if (this.map[postcode] === undefined) {\r\n        // # 1\r\n        st = 'none';\r\n\r\n    } else if ('complete' === this.map[postcode].state) {\r\n        // # 2\r\n        st = 'complete';\r\n\r\n    } else {\r\n        t_ms = this.getTime() - this.map[postcode].time;\r\n        if (t_ms < 5000) {\r\n            // # 3\r\n            st = 'waiting';\r\n\r\n        } else {\r\n            // # 4\r\n            st = 'none';\r\n        }\r\n    }\r\n\r\n    return st;\r\n};\r\n\r\nJpostal.Database.prototype.setStatus = function (i_postcode) {\r\n    \"use strict\";\r\n\r\n    var postcode = '_' + i_postcode;\r\n\r\n    if (this.map[postcode] === undefined) {\r\n        this.map[postcode] = {\r\n            state : 'waiting',\r\n            time  : 0\r\n        };\r\n    }\r\n\r\n    this.map[postcode].time = this.getTime();\r\n};\r\n\r\nJpostal.Database.prototype.getProtocol = function () {\r\n    \"use strict\";\r\n\r\n    return window.location.protocol;\r\n};\r\n\r\nJpostal.Database.prototype.getTime = function () {\r\n    \"use strict\";\r\n\r\n    return (new Date()).getTime();\r\n};\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var instance;\r\n\r\n    Jpostal.Database.getInstance = function () {\r\n        if (instance === undefined) {\r\n            instance = new Jpostal.Database();\r\n        }\r\n        return instance;\r\n    };\r\n}());\r\n\r\nJpostal.Jpostal = function (i_JposDb) {\r\n    \"use strict\";\r\n\r\n    this.address  = '';\r\n    this.jposDb   = i_JposDb;\r\n    this.options  = {};\r\n    this.postcode = '';\r\n    this.minLen   = 3;\r\n};\r\n\r\nJpostal.Jpostal.prototype.displayAddress = function () {\r\n    \"use strict\";\r\n\r\n    var that = this;\r\n\r\n    if (this.postcode === '000info') {\r\n        this.address[2] += ' ' + this.getScriptSrc();\r\n    }\r\n\r\n    Object.keys(this.options.address).forEach(function (key) {\r\n        var format = that.options.address[key],\r\n            value = that.formatAddress(format, that.address);\r\n\r\n        if (that.isSelectTagForPrefecture(key, format)) {\r\n            that.setSelectTagForPrefecture(key, value);\r\n        } else {\r\n            $(key).val(value);\r\n            that.trigger(key);\r\n        }\r\n    });\r\n};\r\n\r\nJpostal.Jpostal.prototype.isSelectTagForPrefecture = function (i_key, i_fmt) {\r\n    \"use strict\";\r\n\r\n    // 都道府県のSELECTタグか？\r\n    var f;\r\n\r\n    switch (i_fmt) {\r\n    case '%3':\r\n    case '%p':\r\n    case '%prefecture':\r\n        if ($(i_key).get(0).tagName.toUpperCase() === 'SELECT') {\r\n            f = true;\r\n        } else {\r\n            f = false;\r\n        }\r\n        break;\r\n\r\n    default:\r\n        f = false;\r\n        break;\r\n    }\r\n    return f;\r\n};\r\n\r\nJpostal.Jpostal.prototype.setSelectTagForPrefecture = function (i_key, i_value) {\r\n    \"use strict\";\r\n\r\n    var value,\r\n        el;\r\n\r\n    // 都道府県のSELECTタグ\r\n    // ケース1: <option value=\"東京都\">東京都</option>\r\n    $(i_key).val(i_value);\r\n    if ($(i_key).val() === i_value) {\r\n        this.trigger(i_key);\r\n        return;\r\n    }\r\n\r\n    // ケース2: valueが数値(自治体コードの場合が多い)\r\n    //    テキストが「北海道」を含むかどうかで判断する\r\n    //    <option value=\"01\">北海道(01)</option>\r\n    //    <option value=\"1\">1.北海道</option>\r\n    value = '';\r\n    el = $(i_key)[0];\r\n    Object.keys(el.options).forEach(function (i) {\r\n        var p = String(el.options[i].text).indexOf(i_value);\r\n        if (0 <= p) {\r\n            value = el.options[i].value;\r\n        }\r\n    });\r\n\r\n    if (value !== '') {\r\n        $(i_key).val(value);\r\n        this.trigger(i_key);\r\n    }\r\n\r\n};\r\n\r\nJpostal.Jpostal.prototype.trigger = function (i_key) {\r\n    \"use strict\";\r\n\r\n    if (this.options.trigger === undefined || this.options.trigger[i_key] === undefined || this.options.trigger[i_key] === false) {\r\n        return;\r\n    }\r\n    $(i_key).trigger(\"change\");\r\n};\r\n\r\nJpostal.Jpostal.prototype.formatAddress = function (i_fmt, i_address) {\r\n    \"use strict\";\r\n\r\n    var s = i_fmt,\r\n        that = this;\r\n\r\n    s = s.replace(/%3|%p|%prefecture/, i_address[1]);\r\n    s = s.replace(/%4|%c|%city/,       i_address[2]);\r\n    s = s.replace(/%5|%t|%town/,       i_address[3]);\r\n    s = s.replace(/%6|%a|%address/,    i_address[4]);\r\n    s = s.replace(/%7|%n|%name/,       i_address[5]);\r\n\r\n    s = s.replace(/%8/,  i_address[6]);\r\n    s = s.replace(/%9/,  i_address[7]);\r\n    s = s.replace(/%10/, i_address[8]);\r\n\r\n    s = s.replace(/%([ASHKV]+)8/, function (match, p1) {\r\n        return that.mb_convert_kana(i_address[6], p1);\r\n    });\r\n    s = s.replace(/%([ASHKV]+)9/, function (match, p1) {\r\n        return that.mb_convert_kana(i_address[7], p1);\r\n    });\r\n    s = s.replace(/%([ASHKV]+)10/, function (match, p1) {\r\n        return that.mb_convert_kana(i_address[8], p1);\r\n    });\r\n\r\n    return s;\r\n};\r\n\r\nJpostal.Jpostal.prototype.mb_convert_kana = function (i_str, i_option) {\r\n    \"use strict\";\r\n\r\n    var str = i_str,\r\n        i,\r\n        o,\r\n        funcs;\r\n\r\n    function tr(i_str, map) {\r\n        var reg = new RegExp(\"(\" + Object.keys(map).join(\"|\") + \")\", \"g\");\r\n\r\n        return i_str.replace(reg, function (s) {\r\n            return map[s];\r\n        });\r\n    }\r\n\r\n    funcs = {\r\n        A: function (i_str) {\r\n            var reg = /[A-Za-z0-9!#\\$%&\\(\\)\\*\\+,\\-\\.\\/:;<=>\\?@\\[\\]\\^_`\\{\\|\\}]/g,\r\n                s;\r\n\r\n            s = i_str.replace(reg, function (s) {\r\n                return String.fromCharCode(s.charCodeAt(0) + 65248);\r\n            });\r\n\r\n            return s;\r\n        },\r\n        S: function (i_str) {\r\n            return i_str.replace(/\\u0020/g, '\\u3000');\r\n        },\r\n        H: function (i_str) {\r\n            var map = {\r\n                \"ｱ\": \"あ\",\r\n                \"ｲ\": \"い\",\r\n                \"ｳ\": \"う\",\r\n                \"ｴ\": \"え\",\r\n                \"ｵ\": \"お\",\r\n                \"ｶ\": \"か\",\r\n                \"ｷ\": \"き\",\r\n                \"ｸ\": \"く\",\r\n                \"ｹ\": \"け\",\r\n                \"ｺ\": \"こ\",\r\n                \"ｻ\": \"さ\",\r\n                \"ｼ\": \"し\",\r\n                \"ｽ\": \"す\",\r\n                \"ｾ\": \"せ\",\r\n                \"ｿ\": \"そ\",\r\n                \"ﾀ\": \"た\",\r\n                \"ﾁ\": \"ち\",\r\n                \"ﾂ\": \"つ\",\r\n                \"ﾃ\": \"て\",\r\n                \"ﾄ\": \"と\",\r\n                \"ﾅ\": \"な\",\r\n                \"ﾆ\": \"に\",\r\n                \"ﾇ\": \"ぬ\",\r\n                \"ﾈ\": \"ね\",\r\n                \"ﾉ\": \"の\",\r\n                \"ﾊ\": \"は\",\r\n                \"ﾋ\": \"ひ\",\r\n                \"ﾌ\": \"ふ\",\r\n                \"ﾍ\": \"へ\",\r\n                \"ﾎ\": \"ほ\",\r\n                \"ﾏ\": \"ま\",\r\n                \"ﾐ\": \"み\",\r\n                \"ﾑ\": \"む\",\r\n                \"ﾒ\": \"め\",\r\n                \"ﾓ\": \"も\",\r\n                \"ﾔ\": \"や\",\r\n                \"ﾕ\": \"ゆ\",\r\n                \"ﾖ\": \"よ\",\r\n                \"ﾗ\": \"ら\",\r\n                \"ﾘ\": \"り\",\r\n                \"ﾙ\": \"る\",\r\n                \"ﾚ\": \"れ\",\r\n                \"ﾛ\": \"ろ\",\r\n                \"ﾜ\": \"わ\",\r\n                \"ｦ\": \"を\",\r\n                \"ﾝ\": \"ん\",\r\n                \"ｧ\": \"ぁ\",\r\n                \"ｨ\": \"ぃ\",\r\n                \"ｩ\": \"ぅ\",\r\n                \"ｪ\": \"ぇ\",\r\n                \"ｫ\": \"ぉ\",\r\n                \"ｯ\": \"っ\",\r\n                \"ｬ\": \"ゃ\",\r\n                \"ｭ\": \"ゅ\",\r\n                \"ｮ\": \"ょ\",\r\n                \"｡\": \"。\",\r\n                \"､\": \"、\",\r\n                \"ｰ\": \"ー\",\r\n                \"｢\": \"「\",\r\n                \"｣\": \"」\",\r\n                \"･\": \"・\",\r\n                \"ﾞ\": \"゛\",\r\n                \"ﾟ\": \"゜\"\r\n            };\r\n            return tr(i_str, map);\r\n        },\r\n        K: function (i_str) {\r\n            var map = {\r\n                \"ｱ\": \"ア\",\r\n                \"ｲ\": \"イ\",\r\n                \"ｳ\": \"ウ\",\r\n                \"ｴ\": \"エ\",\r\n                \"ｵ\": \"オ\",\r\n                \"ｶ\": \"カ\",\r\n                \"ｷ\": \"キ\",\r\n                \"ｸ\": \"ク\",\r\n                \"ｹ\": \"ケ\",\r\n                \"ｺ\": \"コ\",\r\n                \"ｻ\": \"サ\",\r\n                \"ｼ\": \"シ\",\r\n                \"ｽ\": \"ス\",\r\n                \"ｾ\": \"セ\",\r\n                \"ｿ\": \"ソ\",\r\n                \"ﾀ\": \"タ\",\r\n                \"ﾁ\": \"チ\",\r\n                \"ﾂ\": \"ツ\",\r\n                \"ﾃ\": \"テ\",\r\n                \"ﾄ\": \"ト\",\r\n                \"ﾅ\": \"ナ\",\r\n                \"ﾆ\": \"ニ\",\r\n                \"ﾇ\": \"ヌ\",\r\n                \"ﾈ\": \"ネ\",\r\n                \"ﾉ\": \"ノ\",\r\n                \"ﾊ\": \"ハ\",\r\n                \"ﾋ\": \"ヒ\",\r\n                \"ﾌ\": \"フ\",\r\n                \"ﾍ\": \"ヘ\",\r\n                \"ﾎ\": \"ホ\",\r\n                \"ﾏ\": \"マ\",\r\n                \"ﾐ\": \"ミ\",\r\n                \"ﾑ\": \"ム\",\r\n                \"ﾒ\": \"メ\",\r\n                \"ﾓ\": \"モ\",\r\n                \"ﾔ\": \"ヤ\",\r\n                \"ﾕ\": \"ユ\",\r\n                \"ﾖ\": \"ヨ\",\r\n                \"ﾗ\": \"ラ\",\r\n                \"ﾘ\": \"リ\",\r\n                \"ﾙ\": \"ル\",\r\n                \"ﾚ\": \"レ\",\r\n                \"ﾛ\": \"ロ\",\r\n                \"ﾜ\": \"ワ\",\r\n                \"ｦ\": \"ヲ\",\r\n                \"ﾝ\": \"ン\",\r\n                \"ｧ\": \"ァ\",\r\n                \"ｨ\": \"ィ\",\r\n                \"ｩ\": \"ゥ\",\r\n                \"ｪ\": \"ェ\",\r\n                \"ｫ\": \"ォ\",\r\n                \"ｯ\": \"ッ\",\r\n                \"ｬ\": \"ャ\",\r\n                \"ｭ\": \"ュ\",\r\n                \"ｮ\": \"ョ\",\r\n                \"｡\": \"。\",\r\n                \"､\": \"、\",\r\n                \"ｰ\": \"ー\",\r\n                \"｢\": \"「\",\r\n                \"｣\": \"」\",\r\n                \"･\": \"・\",\r\n                \"ﾞ\": \"゛\",\r\n                \"ﾟ\": \"゜\"\r\n            };\r\n            return tr(i_str, map);\r\n        },\r\n        V: function (i_str) {\r\n            var map = {\r\n                \"か゛\": \"が\",\r\n                \"き゛\": \"ぎ\",\r\n                \"く゛\": \"ぐ\",\r\n                \"け゛\": \"げ\",\r\n                \"こ゛\": \"ご\",\r\n                \"さ゛\": \"ざ\",\r\n                \"し゛\": \"じ\",\r\n                \"す゛\": \"ず\",\r\n                \"せ゛\": \"ぜ\",\r\n                \"そ゛\": \"ぞ\",\r\n                \"た゛\": \"だ\",\r\n                \"ち゛\": \"ぢ\",\r\n                \"つ゛\": \"づ\",\r\n                \"て゛\": \"で\",\r\n                \"と゛\": \"ど\",\r\n                \"は゛\": \"ば\",\r\n                \"ひ゛\": \"び\",\r\n                \"ふ゛\": \"ぶ\",\r\n                \"へ゛\": \"べ\",\r\n                \"ほ゛\": \"ぼ\",\r\n                \"は゜\": \"ぱ\",\r\n                \"ひ゜\": \"ぴ\",\r\n                \"ふ゜\": \"ぷ\",\r\n                \"へ゜\": \"ぺ\",\r\n                \"ほ゜\": \"ぽ\",\r\n\r\n                \"カ゛\": \"ガ\",\r\n                \"キ゛\": \"ギ\",\r\n                \"ク゛\": \"グ\",\r\n                \"ケ゛\": \"ゲ\",\r\n                \"コ゛\": \"ゴ\",\r\n                \"サ゛\": \"ザ\",\r\n                \"シ゛\": \"ジ\",\r\n                \"ス゛\": \"ズ\",\r\n                \"セ゛\": \"ゼ\",\r\n                \"ソ゛\": \"ゾ\",\r\n                \"タ゛\": \"ダ\",\r\n                \"チ゛\": \"ヂ\",\r\n                \"ツ゛\": \"ヅ\",\r\n                \"テ゛\": \"デ\",\r\n                \"ト゛\": \"ド\",\r\n                \"ハ゛\": \"バ\",\r\n                \"ヒ゛\": \"ビ\",\r\n                \"フ゛\": \"ブ\",\r\n                \"ヘ゛\": \"ベ\",\r\n                \"ホ゛\": \"ボ\",\r\n                \"ハ゜\": \"パ\",\r\n                \"ヒ゜\": \"ピ\",\r\n                \"フ゜\": \"プ\",\r\n                \"ヘ゜\": \"ペ\",\r\n                \"ホ゜\": \"ポ\"\r\n            };\r\n            return tr(i_str, map);\r\n        }\r\n    };\r\n\r\n    for (i = 0; i < i_option.length; i += 1) {\r\n        o = i_option[i];\r\n        str = funcs[o](str);\r\n    }\r\n\r\n    return str;\r\n};\r\n\r\nJpostal.Jpostal.prototype.getScriptSrc = function () {\r\n    \"use strict\";\r\n\r\n    var src = '',\r\n        el_arr,\r\n        i,\r\n        n,\r\n        el_src;\r\n\r\n    el_arr = document.getElementsByTagName('script');\r\n    n = el_arr.length;\r\n    for (i = 0; i < n; i += 1) {\r\n        el_src = el_arr[i].src;\r\n        if (0 <= el_src.indexOf(\"jquery.jpostal.js\")) {\r\n            src = el_src;\r\n            break;\r\n        }\r\n    }\r\n\r\n    return src;\r\n};\r\n\r\nJpostal.Jpostal.prototype.init = function (i_options) {\r\n    \"use strict\";\r\n\r\n    if (i_options.postcode === undefined) {\r\n        throw new Error('postcode undefined');\r\n    }\r\n    if (i_options.address === undefined) {\r\n        throw new Error('address undefined');\r\n    }\r\n\r\n    this.options.postcode = [];\r\n    if (typeof i_options.postcode === 'string') {\r\n        this.options.postcode.push(i_options.postcode);\r\n    } else {\r\n        this.options.postcode = i_options.postcode;\r\n    }\r\n\r\n    this.options.address = i_options.address;\r\n\r\n    if (i_options.url !== undefined) {\r\n        this.jposDb.url = i_options.url;\r\n    }\r\n\r\n    this.options.trigger = {};\r\n    if (i_options.trigger !== undefined) {\r\n        this.options.trigger = i_options.trigger;\r\n    }\r\n};\r\n\r\nJpostal.Jpostal.prototype.main = function () {\r\n    \"use strict\";\r\n\r\n    var that,\r\n        f;\r\n\r\n    this.scanPostcode();\r\n    if (this.postcode.length < this.minLen) {\r\n        // git hub issue #4: 郵便番号欄が0～2文字のとき、住所欄を空欄にせず、入力内容を維持してほしい \r\n        return;\r\n    }\r\n\r\n    that = this;\r\n    f = this.jposDb.request(this.postcode, function () {\r\n        that.callback();\r\n    });\r\n    if (!f) {\r\n        this.callback();\r\n    }\r\n};\r\n\r\nJpostal.Jpostal.prototype.callback = function () {\r\n    \"use strict\";\r\n\r\n    this.address = this.jposDb.get(this.postcode);\r\n    this.displayAddress();\r\n};\r\n\r\nJpostal.Jpostal.prototype.scanPostcode = function () {\r\n    \"use strict\";\r\n\r\n    var s = '',\r\n        s3,\r\n        s4;\r\n\r\n    switch (this.options.postcode.length) {\r\n    case 0:\r\n        break;\r\n\r\n    case 1:\r\n        //    github issue #8: 1つ目を空欄、2つ目を「001」としても、「001」として北海道札幌市を表示してしまう\r\n        //    ----------------------------------------\r\n        //    case    postcode    result\r\n        //    ----------------------------------------\r\n        //    1        ''            ''\r\n        //    1        12            ''\r\n        //    2        123           123\r\n        //    2        123-          123\r\n        //    2        123-4         123\r\n        //    3        123-4567      1234567\r\n        //    2        1234          123\r\n        //    4        1234567       1234567\r\n        //    ----------------------------------------\r\n        s = String($(this.options.postcode[0]).val());\r\n        if (0 <= s.search(/^([0-9]{3})([0-9A-Za-z]{4})/)) {\r\n            // case 4\r\n            s = s.substr(0, 7);\r\n        } else if (0 <= s.search(/^([0-9]{3})-([0-9A-Za-z]{4})/)) {\r\n            // case 3\r\n            s = s.substr(0, 3) + s.substr(4, 4);\r\n        } else if (0 <= s.search(/^([0-9]{3})/)) {\r\n            // case 2\r\n            s = s.substr(0, 3);\r\n        } else {\r\n            // case 1\r\n            s = '';\r\n        }\r\n        break;\r\n\r\n    case 2:\r\n        //    github issue #8: 1つ目を空欄、2つ目を「001」としても、「001」として北海道札幌市を表示してしまう\r\n        //    ----------------------------------------\r\n        //    case    post1    post2    result\r\n        //    ----------------------------------------\r\n        //    1        ''        ---        ''\r\n        //    1        12        ---        ''\r\n        //    2        123        ''        123\r\n        //    2        123        4         123\r\n        //    3        123        4567      1234567\r\n        //    ----------------------------------------\r\n        s3 = String($(this.options.postcode[0]).val());\r\n        s4 = String($(this.options.postcode[1]).val());\r\n        if (0 <= s3.search(/^[0-9]{3}$/)) {\r\n            if (0 <= s4.search(/^[0-9A-Za-z]{4}$/)) {\r\n                // case 3\r\n                s = s3 + s4;\r\n            } else {\r\n                // case 2\r\n                s = s3;\r\n            }\r\n        } else {\r\n            // case 1\r\n            s = '';\r\n        }\r\n        break;\r\n    }\r\n\r\n    this.postcode = s;\r\n};\r\n\r\n//    MEMO: For the following reason, JposDb was put on the global scope, not local scope.\r\n//    ---------------------------------------------------------------------\r\n//     data file    callback            JposDb scope\r\n//    ---------------------------------------------------------------------\r\n//    001.js        JposDb.save            global scope\r\n//    001.js.php    $_GET['callback']    local scopde for function($){}\r\n//    ---------------------------------------------------------------------\r\nwindow.jQuery_jpostal_callback = function (i_data) {\r\n    \"use strict\";\r\n\r\n    Jpostal.Database.getInstance().save(i_data);\r\n};\r\n\r\n\r\n(function (factory) {\r\n    \"use strict\";\r\n\r\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        module.exports = factory(require(\"jquery\"), window, document);\r\n    } else {\r\n        factory(jQuery, window, document);\r\n    }\r\n//}(function ($, window, document, undefined) {\r\n}(function ($) {\r\n    \"use strict\";\r\n\r\n    $.fn.jpostal = function (i_options) {\r\n        var Jpos,\r\n            selector;\r\n\r\n        Jpos = new Jpostal.Jpostal(Jpostal.Database.getInstance());\r\n        Jpos.init(i_options);\r\n\r\n        if (typeof i_options.click === 'string' && i_options.click !== '') {\r\n            $(i_options.click).bind('click', function () {\r\n                Jpos.main();\r\n            });\r\n        } else {\r\n            selector = Jpos.options.postcode[0];\r\n            $(selector).bind('keyup change', function () {\r\n                Jpos.main();\r\n            });\r\n\r\n            if (1 <= Jpos.options.postcode.length) {\r\n                selector = Jpos.options.postcode[1];\r\n                $(selector).bind('keyup change', function () {\r\n                    Jpos.main();\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n}));\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClFA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AArBA;AACA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAVA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAbA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DA;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/DA;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;AAqDA;AACA;AA7MA;AACA;AA+MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA3DA;AACA;AA6DA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}